{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["minDate","Date","toISOString","slice","maxDate","AddTask","state","text","important","date","handleChangeInput","e","setState","target","value","handleCheckbox","checked","handleChangeDate","handleClick","props","addTask","className","type","placeholder","this","onChange","htmlFor","id","min","max","onClick","Component","Task","tasks","active","finishDate","style","color","change","delateTask","finish","toLocaleString","TaskList","filter","task","done","sort","a","b","length","toLowerCase","activeTasks","map","changeActive","doneTasks","fontSize","todayDate","App","counter","handleChangeActive","console","log","forEach","getTime","handleDelateTask","Array","from","addTasks","prevState","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a97ae9f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AddTask.css\";\r\n\r\nconst minDate = new Date().toISOString().slice(0, 10);\r\n\r\nconst maxDate = new Date().toISOString().slice(0, 4) * 1 + 1;\r\nclass AddTask extends Component {\r\n  state = {\r\n    text: \"\",\r\n    important: false,\r\n    date: minDate,\r\n  };\r\n\r\n  handleChangeInput = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      important: e.target.checked,\r\n    });\r\n  };\r\n  handleChangeDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n  handleClick = () => {\r\n    const { text, date, important } = this.state;\r\n    const add = this.props.addTask(text, date, important);\r\n    if (add) {\r\n      this.setState({\r\n        text: \"\",\r\n        important: false,\r\n        date: minDate,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add your task here\"\r\n          value={this.state.text}\r\n          onChange={this.handleChangeInput}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"checkbox\">\r\n          {\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={this.state.important}\r\n            id=\"checkbox\"\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          priority\r\n        </label>\r\n        <br />\r\n        <label htmlFor=\"date\">\r\n          {\" \"}\r\n          It will be done by:\r\n          <input\r\n            type=\"date\"\r\n            value={this.state.date}\r\n            onChange={this.handleChangeDate}\r\n            min={minDate}\r\n            max={maxDate + \"-12-31\"}\r\n          />{\" \"}\r\n        </label>\r\n        <br />\r\n        <button onClick={this.handleClick}>Add Task</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nconst Task = (props) => {\r\n  const { text, date, active, id, important, finishDate } = props.tasks;\r\n  const style = {\r\n    color: \"red\",\r\n  };\r\n  if (active) {\r\n    return (\r\n      <li>\r\n        <p style={important ? style : null}>{text} </p>\r\n        <span>\r\n          should be done by:<em> {date}</em>\r\n        </span>{\" \"}\r\n        <button onClick={() => props.change(id)}>Done</button>\r\n        <button onClick={() => props.delateTask(id)}>X</button>\r\n      </li>\r\n    );\r\n  } else {\r\n    const finish = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <li>\r\n        <p>{text}</p>\r\n        <span>\r\n          {\" \"}\r\n          planed at:\r\n          <em> {date} </em> finished at <em> {finish} </em>\r\n        </span>\r\n        <button onClick={() => props.delateTask(id)}>X</button>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task.js\";\r\n\r\nconst TaskList = (props) => {\r\n  const active = props.tasks.filter((task) => task.active);\r\n  const done = props.tasks.filter((task) => !task.active);\r\n\r\n  done.sort((a, b) => {\r\n    return b.finishDate - a.finishDate;\r\n  });\r\n  if (active.length > 2) {\r\n    active.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n  const activeTasks = active.map((task) => {\r\n    return (\r\n      <Task\r\n        key={task.id}\r\n        tasks={task}\r\n        change={props.changeActive}\r\n        delateTask={props.delateTask}\r\n      />\r\n    );\r\n  });\r\n\r\n  const doneTasks = done.map((task) => {\r\n    return (\r\n      <Task\r\n        key={task.id}\r\n        tasks={task}\r\n        change={props.changeActive}\r\n        delateTask={props.delateTask}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h3>Tasks to do</h3>\r\n        <ul>\r\n          {activeTasks.length > 0 ? (\r\n            activeTasks\r\n          ) : (\r\n            <p>Congratulations! You have done all tasks!</p>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <hr />\r\n      <div className=\"done\">\r\n        <h3>\r\n          Tasks done (<em>{doneTasks.length} </em>)\r\n        </h3>\r\n        {done.length > 5 && (\r\n          <span style={{ fontSize: 12 }}>\r\n            Wyswietlonych jest jedynie 5 ostatnich zada≈Ñ\r\n          </span>\r\n        )}\r\n        <ul>{doneTasks.slice(0, 5)}</ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport AddTask from \"./AddTask\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nconst todayDate = new Date().toISOString().slice(0, 10);\r\nclass App extends Component {\r\n  counter = 4;\r\n  state = {\r\n    tasks: [\r\n      {\r\n        id: 0,\r\n        text: \"Zrobic papa\",\r\n        date: todayDate,\r\n        active: true,\r\n        important: true,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 1,\r\n        text: \"Nakarmic kota\",\r\n        date: todayDate,\r\n        active: true,\r\n        important: false,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Nakarmic s≈Çonia\",\r\n        date: todayDate,\r\n        active: true,\r\n        important: false,\r\n        finishDate: null,\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"Nakarmic s≈Çonia\",\r\n        date: todayDate,\r\n        active: true,\r\n        important: false,\r\n        finishDate: null,\r\n      },\r\n    ],\r\n  };\r\n  handleChangeActive = (id) => {\r\n    console.log(\"done elementu o id \" + id);\r\n    const tasks = [...this.state.tasks];\r\n    tasks.forEach((task) => {\r\n      if (task.id === id) {\r\n        task.active = false;\r\n        task.finishDate = new Date().getTime();\r\n      }\r\n    });\r\n    this.setState({\r\n      tasks,\r\n    });\r\n  };\r\n  handleDelateTask = (id) => {\r\n    let tasks = Array.from(this.state.tasks);\r\n    console.log(tasks);\r\n\r\n    tasks = tasks.filter((task) => task.id !== id);\r\n    this.setState({\r\n      tasks,\r\n    });\r\n  };\r\n  addTasks = (text, date, important) => {\r\n    if (text.length > 3) {\r\n      const task = {\r\n        id: this.counter,\r\n        text,\r\n        date,\r\n        active: true,\r\n        important,\r\n        finishDate: null,\r\n      };\r\n      this.counter++;\r\n      this.setState((prevState) => ({\r\n        tasks: [...prevState.tasks, task],\r\n      }));\r\n    } else {\r\n      alert(\r\n        \"Your task which you inputed is too short. Please provide more than 3 letters. Thank you!\"\r\n      );\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>to do app</h1>\r\n        <AddTask addTask={this.addTasks} />\r\n        <TaskList\r\n          tasks={this.state.tasks}\r\n          changeActive={this.handleChangeActive}\r\n          delateTask={this.handleDelateTask}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}